var g_headers={Accept:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8","Accept-Charset":"windows-1251,utf-8;q=0.7,*;q=0.3","Accept-Language":"ru-RU,ru;q=0.8,en-US;q=0.6,en;q=0.4",Connection:"keep-alive","User-Agent":"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:35.0) Gecko/20100101 Firefox/35.0"},baseurlDemo="https://idemo.bspb.ru/",baseurlReal="https://i.bspb.ru/",baseurl;
function login(b){AnyBalance.setDefaultCharset("utf-8");checkEmpty(b.login,"Введите логин!");checkEmpty(b.password,"Введите пароль!");baseurl=baseurlReal;"demo"==b.login&&(baseurl=baseurlDemo);var a=AnyBalance.requestGet(baseurl+"welcome",g_headers);if(!a||400<AnyBalance.getLastStatusCode())throw AnyBalance.trace(a),new AnyBalance.Error("Ошибка при подключении к сайту провайдера! Попробуйте обновить данные позже.");/logout/i.test(a)?AnyBalance.trace("Уже залогинены, используем существующую сессию"):
(getElement(a,/<form[^>]+id="login-form"[^>]*>/i),a=createFormParams(a,function(a,c,f,h){return"username"==f?b.login:"password"==f?b.password:h}),a=AnyBalance.requestPost(baseurl+"login",a,addHeaders({"X-Requested-With":"XMLHttpRequest",Referer:baseurl})));if(/<input[^>]+name="otpCode"/i.test(a)){AnyBalance.trace("Потребовался ввод кода.");var c=getElement(a,/<span[^>]*otp-code-text[^>]*/i,replaceTagsAndSpaces);getElement(a,/<form[^>]+name="login-form"[^>]*>/i);a=createFormParams(a,function(a,b,f,
h){return"otpCode"==f?AnyBalance.retrieveCode((c||"Пожалуйста, введите код из SMS для входа в интернет-банк.")+(baseurl==baseurlDemo?" Для демонстрации введите 0000":""),null,{inputType:"number",time:18E4}):h});a=AnyBalance.requestPost(baseurl+"security/authenticateotp",a,addHeaders({Referer:baseurl}))}if(!/logout/i.test(a)){var f=getParam(a,null,null,/<div[^>]+alert-error[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces);if(f)throw new AnyBalance.Error(f,null,/Неверные данные пользователя/i.test(f));
AnyBalance.trace(a);throw new AnyBalance.Error("Не удалось зайти в интернет-банк. Сайт изменен?");}__setLoginSuccessful();return a}
function processAccounts(b,a){if(AnyBalance.isAvailable("accounts")){b=AnyBalance.requestGet(baseurl+"accounts",g_headers);var c=getElement(b,/<table[^>]+id="accounts"[^>]*>/i);c||AnyBalance.trace("Не удалось найти таблицу счетов: "+b);c=getElements(c,[/<tr[^>]*>/ig,/<td/i]);AnyBalance.trace("Найдено счетов: "+c.length);a.accounts||(a.accounts=[]);for(var f=0;f<c.length;++f){var e=c[f],d=getParam(e,null,null,/<td[^>]+class="account"[^>]*id="account-([^"]*)/i,replaceHtmlEntities),g=getParam(e,null,
null,/<a[^>]+class="alias"[^>]*>([\s\S]*?)<\/a>/i,replaceTagsAndSpaces),e=AnyBalance.requestGet(baseurl+"accounts/details?accountId="+d,addHeaders({Referer:baseurl})),h=getParam(e,null,null,/<div[^>]+account-number[^>]*>([\s\S]*?)<\/div>/i,[/\s+\D+\s*$/,"",replaceTagsAndSpaces,/\s+/g,""]),d=findAccount(a,d,g);d.num=h;__shouldProcess("accounts",d)&&processAccount(e,d);a.accounts.push(d)}}}
function processAccount(b,a){AnyBalance.trace("Обработка счета "+a.__name);getParam(b,a,"accounts.balance",/<label[^>]*>\s*Остаток[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces,parseBalance);getParam(b,a,["accounts.currency","accounts.balance"],/<label[^>]*>\s*Остаток[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces,parseCurrency);getParam(b,a,"accounts.office",/Офис счёта[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces);getParam(b,a,"accounts.owner",/Получатель[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,
replaceTagsAndSpaces);isAvailable("accounts.transactions")&&processAccountTransactions(b,a)}
function processCards(b,a){if(AnyBalance.isAvailable("cards")){b=AnyBalance.requestGet(baseurl+"cards",g_headers);var c=getElement(b,/<table[^>]+id="cards"[^>]*>/i);if(c){c=getElements(c,[/<tr[^>]*>/ig,/<td/i]);AnyBalance.trace("Найдено карт и карточных счетов: "+c.length);a.cards=[];for(var f,e=0;e<c.length;++e){var d=c[e];if(/class="account-row"/i.test(d)){var g=getParam(d,null,null,/accountId=([^"&]*)/i,replaceHtmlEntities),h=getParam(d,null,null,/<a[^>]+accountId=[^>]*>([\s\S]*?)<\/a>/i,replaceTagsAndSpaces);
f=findAccount(a,g,h);getParam(d,f,"accounts.balance",/(?:[\s\S]*?<td[^>]*>){6}([\s\S]*?)<\/td>/i,replaceTagsAndSpaces,parseBalance);getParam(d,f,"accounts.currency",/(?:[\s\S]*?<td[^>]*>){6}([\s\S]*?)<\/td>/i,replaceTagsAndSpaces,parseCurrency)}else{var g=getParam(d,null,null,/cardId=([^"&]*)/i,replaceHtmlEntities),h=getParam(d,null,null,/<a[^>]+class="alias"[^>]*>([\s\S]*?)<\/a>/i,replaceTagsAndSpaces),k=getParam(d,null,null,/(?:[\s\S]*?<td[^>]*>){2}([\s\S]*?)(?:<\/td>|<div)/i,replaceTagsAndSpaces),
g={__id:g,__name:h,num:k,account_id:f.__id};__shouldProcess("cards",g)&&processCard(d,g);a.cards.push(g)}}}else AnyBalance.trace(b),AnyBalance.trace("Не удалось найти таблицу с картами.")}}function findAccount(b,a,c){b.accounts||(b.accounts=[]);for(var f=0;f<b.accounts.length;f++){var e=b.accounts[f];if(e.__id==a)return e}e={__id:a,__name:c};b.accounts.push(e);return e}
function processCard(b,a){var c=getElements(b,/<td[^>]*>/ig);getParam(c[1],a,"cards.holder",/<div[^>]+muted[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces);getParam(c[2],a,"cards.status",null,replaceTagsAndSpaces);getParam(c[3],a,"cards.till",null,replaceTagsAndSpaces,parseDate);getParam(c[4],a,"cards.bonus",null,replaceTagsAndSpaces,parseBalance);AnyBalance.isAvailable("cards.notifications")&&/card-notification[^>]*btn-success/i.test(b)&&processCardNotifications(a)}
var g_replaceWithSpaces=[replaceTagsAndSpaces,/\s+/g,""];
function processDeposits(b,a){if(AnyBalance.isAvailable("deposits")){b=AnyBalance.requestGet(baseurl+"deposits",g_headers);var c=getElement(b,/<table[^>]+id="deposits"[^>]*>/i);c||AnyBalance.trace("Не удалось найти таблицу вкладов: "+b);c=getElements(c,[/<tr[^>]*>/ig,/<td/i]);AnyBalance.trace("Найдено вкладов: "+c.length);a.deposits=[];for(var f=0;f<c.length;++f){var e=c[f],d=getParam(e,null,null,/depositId=([^"&]*)/i,replaceHtmlEntities),g=getParam(e,null,null,/<a[^>]+class="alias"[^>]*>([\s\S]*?)<\/a>/i,
replaceTagsAndSpaces);d?e=AnyBalance.requestGet(baseurl+"deposits/details?depositId="+d,addHeaders({Referer:baseurl})):(d=getParam(e,null,null,/depositOrderId=([^"&]*)/i,replaceHtmlEntities),g=getParam(e,null,null,/<a[^>]+>([\s\S]*?)<\/a>/i,replaceTagsAndSpaces),e=AnyBalance.requestGet(baseurl+"deposits/orderdetails?depositOrderId="+d,addHeaders({Referer:baseurl})));var h=getParam(e,null,null,/<label[^>]*>\s*Счёт вклада[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,g_replaceWithSpaces),d={__id:d,__name:g,
num:h};__shouldProcess("deposits",d)&&processDeposit(e,d);a.deposits.push(d)}}}function parseBool(b){return!/нет|не предусмотрен/i.test(b)}
function processDeposit(b,a){getParam(b,a,"deposits.balance",/<label[^>]*>\s*Сумма[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces,parseBalance);getParam(b,a,["deposits.currency","deposits.balance"],/<label[^>]*>\s*Сумма[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces,parseCurrency);getParam(b,a,"deposits.agreement",/<label[^>]*>\s*Договор №[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces);getParam(b,a,"deposits.num_service",/<label[^>]*>\s*Обслуживающий счёт[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,
g_replaceWithSpaces);getParam(b,a,"deposits.num_return",/<label[^>]*>\s*Счёт для возврата[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,g_replaceWithSpaces);getParam(b,a,"deposits.type",/<label[^>]*>\s*Вид[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces);getParam(b,a,"deposits.period",/<label[^>]*>\s*Срок[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces,parseBalance);getParam(b,a,"deposits.date_start",/<label[^>]*>\s*Начало[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces,parseDate);
getParam(b,a,"deposits.date_end",/<label[^>]*>\s*Окончание[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces,parseDate);getParam(b,a,"deposits.pct",/<label[^>]*>\s*Ставка[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces,parseBalance);getParam(b,a,"deposits.prolong",/<label[^>]*>\s*Продление[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces);getParam(b,a,"deposits.pct_sum",/<label[^>]*>\s*Расчётный доход[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces,parseBalance);
getParam(b,a,"deposits.office",/<label[^>]*>\s*Офис вклада[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces,parseBalance);getParam(b,a,"deposits.early",/<label[^>]*>\s*Досрочное расторжение[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces,parseBool);getParam(b,a,"deposits.status",/<label[^>]*>\s*Статус договора[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces)}
function processCredits(b,a){if(AnyBalance.isAvailable("credits")){b=AnyBalance.requestGet(baseurl+"loans",g_headers);var c=getElement(b,/<table[^>]+id="loans"[^>]*>/i);c||AnyBalance.trace("Не удалось найти таблицу кредитов: "+b);c=getElements(c,[/<tr[^>]*>/ig,/<td/i]);AnyBalance.trace("Найдено кредитов: "+c.length);a.credits=[];for(var f=0;f<c.length;++f){0<f&&AnyBalance.sleep(1E3);var e=c[f],d=getParam(e,null,null,/loanId=([^"]*)/i,null,html_entity_decode),g=getParam(e,null,null,/<[^>]+class="alias"[^>]*>([\s\S]*?)<\/a>/i,
replaceTagsAndSpaces),e=AnyBalance.requestGet(baseurl+"loans/details?loanId="+d,addHeaders({Referer:baseurl})),h=getParam(e,null,null,/<label[^>]*>\s*Обслуживающий счёт[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,g_replaceWithSpaces),d={__id:d,__name:g,num:h};__shouldProcess("credits",d)&&processCredit(e,d);a.credits.push(d)}}}
function processCredit(b,a){getParam(b,a,"credits.balance",/<label[^>]*>\s*Осталось погасить[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces,parseBalance);getParam(b,a,["credits.currency","credits.balance"],/<label[^>]*>\s*Осталось погасить[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces,parseCurrency);getParam(b,a,"credits.agreement",/<label[^>]*>\s*Договор №[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces);getParam(b,a,"credits.goal",/<label[^>]*>\s*Цель[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,
replaceTagsAndSpaces);getParam(b,a,"credits.type",/<label[^>]*>\s*Вид[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces);getParam(b,a,"credits.date_start",/<label[^>]*>\s*Начало[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces,parseDate);getParam(b,a,"credits.date_end",/<label[^>]*>\s*Окончание[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces,parseDate);getParam(b,a,"credits.pct",/<label[^>]*>\s*Ставка[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces,parseBalance);
getParam(b,a,"credits.limit",/<label[^>]*>\s*Сумма[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces,parseBalance);getParam(b,a,"credits.debt",/<label[^>]*>\s*Задолженность[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces,parseBalance);getParam(b,a,"credits.peni",/<label[^>]*>\s*Пени[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces,parseBalance);AnyBalance.isAvailable("credits.schedule")&&processCreditSchedule(b,a);AnyBalance.isAvailable("credits.transactions")&&processCreditTransactions(b,
a)}function processCreditSchedule(b,a){var c=getElement(b,/<table[^>]+repayments-table[^>]*>/i);c?(a.schedule=[],processTable(c,a.schedule,"credits.schedule.",{date:{re:/Дата/i,result_func:parseDate},balance:{re:/Осталось погасить/i},debt:{re:/Гашение кредита/i},pct:{re:/Гашение процентов/i},sum:{re:/Общая сумма погашения/i}})):AnyBalance.trace("Таблица графика платежей не найдена: "+b)}
function processInfo(b,a){b=AnyBalance.requestGet(baseurl+"settings/phonesform",g_headers);var c=a.info={};getParam(b,c,"info.fio",/<option[^>]+representee[^>]+selected[^>]*>([\s\S]*?)<\/option>/i,replaceTagsAndSpaces);getParam(b,c,"info.mphone",/<input[^>]+value="([^"]*)[^>]+name="[^"]*phone-1"[^>]*/i,replaceHtmlEntities)}function processBonus(b,a){getParam(b,a,"bonus",/<div[^>]+bonus-points[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces,parseBalance)};
