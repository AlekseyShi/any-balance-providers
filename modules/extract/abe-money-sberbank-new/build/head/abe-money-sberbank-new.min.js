var g_headers={Accept:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8","Accept-Charset":"windows-1251,utf-8;q=0.7,*;q=0.3","Accept-Language":"ru-RU,ru;q=0.8,en-US;q=0.6,en;q=0.4",Connection:"keep-alive","User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.80 Safari/537.36"},nodeUrl="";
function getLoggedInHtml(){var b=nodeUrl||"https://node1.online.sberbank.ru",a=AnyBalance.requestGet(b+"/PhizIC/private/userprofile/userSettings.do",g_headers);if(/accountSecurity.do/i.test(a))return nodeUrl=b,a}
function login(b){AnyBalance.setDefaultCharset("utf-8");checkEmpty(b.login,"Пожалуйста, укажите логин для входа в Сбербанк-Онлайн!");checkEmpty(b.password,"Пожалуйста, укажите пароль для входа в Сбербанк-Онлайн!");var a=getLoggedInHtml();if(a)return AnyBalance.trace("Уже залогинены, используем текущую сессию"),a;AnyBalance.setDefaultCharset("windows-1251");a=AnyBalance.requestPost("https://online.sberbank.ru/CSAFront/login.do",{"field(login)":b.login,"field(password)":b.password,operation:"button.begin"},
addHeaders({Referer:"https://online.sberbank.ru/CSAFront/login.do","X-Requested-With":"XMLHttpRequest",Origin:"https://online.sberbank.ru"}));AnyBalance.setDefaultCharset("utf-8");if(b=getParam(a,null,null,/<h1[^>]*>О временной недоступности услуги[\s\S]*?<p[^>]*>([\s\S]*?)<\/p>/i,replaceTagsAndSpaces))throw new AnyBalance.Error(b);if(b=getParam(a,null,null,/в связи с ошибкой в работе системы[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces))throw new AnyBalance.Error(b);if(/\$\$errorFlag/i.test(a))throw b=
getParam(a,null,null,/([\s\S]*)/,[replaceTagsAndSpaces,/^:/,""]),new AnyBalance.Error(b,null,/Ошибка идентификации/i.test(b));b=getParam(a,null,null,/value\s*=\s*["'](https:[^'"]*?AuthToken=[^'"]*)/i);if(!b)throw AnyBalance.trace(a),new AnyBalance.Error("Не удаётся найти ссылку на информацию. Пожалуйста, обратитесь к разработчикам для исправления ситуации.");AnyBalance.trace("About to authorize: "+b);if(/online.sberbank.ru\/PhizIC/.test(b))a=doNewAccount(b);else{if(/Off_Service/i.test(b))throw new AnyBalance.Error("В настоящее время услуга Сбербанк ОнЛ@йн временно недоступна по техническим причинам. Сбербанк приносит свои извинения за доставленные неудобства.");
AnyBalance.trace(a);throw new AnyBalance.Error("К сожалению, ваш вариант Сбербанка-онлайн пока не поддерживается. Пожалуйста, обратитесь к разработчикам для исправления ситуации.");}__setLoginSuccessful();return a}
function doNewAccount(b){var a=AnyBalance.requestGet(b,addHeaders({Referer:c}));a||(AnyBalance.trace("Почему-то получили пустую страницу... Попробуем ещё раз"),a=AnyBalance.requestGet(b,addHeaders({Referer:c})));/StartMobileBankRegistrationForm/i.test(a)&&(a=getParamByName(a,"PAGE_TOKEN"),checkEmpty(a,"Попытались отказаться от подключения мобильного банка, но не удалось найти PAGE_TOKEN!",!0),a=AnyBalance.requestPost("https://online.sberbank.ru/PhizIC/login/register-mobilebank/start.do",{PAGE_TOKEN:a,
operation:"skip"},addHeaders({Referer:c})));/Ранее вы[^<]*уже создали свой собственный логин для входа/i.test(a)&&checkEmpty(null,getParam(a,null,null,/Ранее вы[^<]*уже создали свой собственный логин для входа[^<]*/i,replaceTagsAndSpaces));var c=getParam(b,null,null,/^(https?:\/\/.*?)\//i);nodeUrl=c;if(/PhizIC/.test(a)){AnyBalance.trace("Entering physic account...: "+c);/confirmTitle/.test(a)&&(b=a,a=getElement(a,/<div[^>]+clickConfirm[^>]+buttonGreen[^>]*>/i)||"",/confirmSMS/i.test(a)?AnyBalance.trace("Запрошен смс-пароль..."):
/confirmCard/i.test(a)?(AnyBalance.trace("Запрошен пароль с чека. Это неудобно, запрашиваем пароль по смс."),AnyBalance.requestPost(c+"/PhizIC/async/confirm.do",{PAGE_TOKEN:getParamByName(b,"PAGE_TOKEN"),operation:"button.confirmSMS"},addHeaders({Referer:c,"X-Requested-With":"XMLHttpRequest"}))):AnyBalance.trace("Неизвестное подтверждение: "+a+". Надеемся, это смс."),a=AnyBalance.retrieveCode("Для входа в интернет банк, пожалуйста, введите одноразовый пароль, который выслан вам по СМС.\n\nЕсли вы не хотите постоянно вводить СМС-пароли при входе, вы можете отменить их в настройках вашего Сбербанк-онлайн. Это безопасно - для совершения денежных операций требование одноразового пароля всё равно останется",
null,{time:3E5}),a=AnyBalance.requestPost(c+"/PhizIC/async/confirm.do",{receiptNo:"",passwordsLeft:"",passwordNo:"",SID:"",$$confirmSmsPassword:a,PAGE_TOKEN:getParamByName(b,"PAGE_TOKEN"),operation:"button.confirm"},addHeaders({Referer:c,"X-Requested-With":"XMLHttpRequest"})));/internetSecurity/.test(a)&&(AnyBalance.trace("Требуется принять соглашение о безопасности... Принимаем..."),a=AnyBalance.requestPost(c+"/PhizIC/internetSecurity.do",{"field(selectAgreed)":"on",PAGE_TOKEN:getParamByName(a,"PAGE_TOKEN"),
operation:"button.confirm"},addHeaders({Referer:c,"X-Requested-With":"XMLHttpRequest"})));/Откроется справочник регионов, в котором щелкните по названию выбранного региона/.test(a)&&(a=AnyBalance.requestPost(c+"/PhizIC/region.do",{id:-1,operation:"button.save"},addHeaders({Referer:c,"X-Requested-With":"XMLHttpRequest"})));if(!/accountSecurity.do/i.test(a)&&(c=getElement(a,/<div[^>]+warningMessages[^>]*>/i,[replaceTagsAndSpaces,/Получите новый пароль, нажав.*/i,""])))throw new AnyBalance.Error(c);
if(!/accountSecurity.do/i.test(a)){c=getLoggedInHtml();if(!/accountSecurity.do/i.test(c))throw AnyBalance.trace(a),new AnyBalance.Error("Не удалось зайти в Cбербанк-онлайн. Сайт изменен?");a=c}}else throw AnyBalance.trace(a),new AnyBalance.Error("Ваш тип личного кабинета не поддерживается. Свяжитесь, пожалуйста, с разработчиками.");return a}
function processAccounts(b,a){if(AnyBalance.isAvailable("accounts")){b=AnyBalance.requestGet(nodeUrl+"/PhizIC/private/accounts/list.do",g_headers);var c=getParamByName(b,"PAGE_TOKEN"),e=getElements(b,/<div[^>]+class="productCover[^"]*Product[^>]*">/ig,g_headers);AnyBalance.trace("Найдено счетов: "+e.length);a.accounts=[];for(var d=0;d<e.length;++d){var f=e[d],g=getParam(f,null,null,/<div[^>]+id="account_(\d+)/i),k=getElement(f,/<div[^>]+productName[^>]*>/i,replaceTagsAndSpaces),h=getParam(f,null,
null,/<[^>]*class="productNumber\b[^"]*">([^<]+)/i,replaceTagsAndSpaces);h?h=getParam(f,null,null,/№([^,]*)/i):(AnyBalance.trace("Не удаётся найти номер счета "+k+"! Пробуем получить его из расширенной информации."),f=AnyBalance.requestGet(nodeUrl+"/PhizIC/private/accounts/bankDetails.do?id="+g,g_headers),h=getParam(f,null,null,/Номер счета:[\s\S]*?<div[^>]+detailsValue[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces),AnyBalance.trace("Получен номер: "+h));g={__id:g,__name:k,num:h};__shouldProcess("accounts",
g)&&processAccount(e[d],g,c);a.accounts.push(g)}}}function parseAllow(b){return/разрешено/i.test(b)}
function processAccount(b,a,c){AnyBalance.trace("Обработка счета "+a.__name);/thermometertargetTemplate/i.test(b)?(getParam(b,a,"accounts.balance",/dribbleCenter\b[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces,parseBalance),getParam(b,a,"accounts.rate",/ставка:\s*([\d.,]+%)/i,replaceTagsAndSpaces,parseBalance),getParam(b,a,["accounts.currency","accounts.balance"],/dribbleCenter\b[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces,parseCurrency),getParam(b,a,"accounts.till",/Дата покупки\s*<span[^>]*>([\s\S]*?)<\/span>/i,
replaceTagsAndSpaces,parseDate)):(getParam(b,a,"accounts.balance",/overallAmount\b[^>]*>([\s\S]*?)<\/span>/i,replaceTagsAndSpaces,parseBalance),getParam(b,a,"accounts.rate",/descriptionRight[^>]*>\s*([\d.,]+%)/i,replaceTagsAndSpaces,parseBalance),getParam(b,a,["accounts.currency","accounts.balance"],/overallAmount\b[^>]*>([\s\S]*?)<\/span>/i,replaceTagsAndSpaces,parseCurrency),getParam(b,a,"accounts.till",/<[^>]*class="(?:product|account)Number\b[^"]*">[^<]+,\s+действует (?:до|по)([^<]+)/i,replaceTagsAndSpaces,
parseDateWord));AnyBalance.isAvailable("accounts.num","accounts.period","accounts.balance_min","accounts.pct_conditions","accounts.status","accounts.prolong","accounts.withdraw","accounts.topup")&&(b=AnyBalance.requestGet(nodeUrl+"/PhizIC/private/accounts/info.do?id="+a.__id,g_headers),getParam(b,a,"accounts.num",/Номер счета[^<]*:[\s\S]*?<td[^>]*>([\s\S]*?)<\/td>/i,replaceTagsAndSpaces),getParam(b,a,"accounts.period",/Срок вклада:[\s\S]*?<td[^>]*>([\s\S]*?)<\/td>/i,replaceTagsAndSpaces),getParam(b,
a,"accounts.balance_min",/Сумма неснижаемого остатка:[\s\S]*?<td[^>]*>([\s\S]*?)<\/td>/i,replaceTagsAndSpaces,parseBalance),getParam(b,a,"accounts.pct_conditions",/Порядок уплаты процентов:[\s\S]*?<td[^>]*>([\s\S]*?)(?:<\/td>|<script)/i,replaceTagsAndSpaces),getParam(b,a,"accounts.status",/Текущее состояние:[\s\S]*?<td[^>]*>([\s\S]*?)<\/td>/i,replaceTagsAndSpaces),getParam(b,a,"accounts.prolong",/Пролонгация:[\s\S]*?<td[^>]*>([\s\S]*?)<\/td>/i,replaceTagsAndSpaces),getParam(b,a,"accounts.withdraw",
/Списание:[\s\S]*?<td[^>]*>([\s\S]*?)<\/td>/i,replaceTagsAndSpaces,parseAllow),getParam(b,a,"accounts.topup",/Зачисление:[\s\S]*?<td[^>]*>([\s\S]*?)<\/td>/i,replaceTagsAndSpaces,parseAllow));AnyBalance.isAvailable("accounts.transactions")&&processAccountTransactions(c,a)}
function processCards(b,a){if(AnyBalance.isAvailable("cards")){b=AnyBalance.requestGet(nodeUrl+"/PhizIC/private/cards/list.do");var c=getElements(b,/<div[^>]+class="productCover[^"]*(?:activeProduct|errorProduct)[^>]*">/ig);AnyBalance.trace("Найдено карт: "+c.length);a.cards=[];for(var e=0;e<c.length;++e){var d=getParam(c[e],null,null,/<div[^>]+id="card_(\d+)/i),f=getParam(c[e],null,null,/<[^>]*class="accountNumber\b[^"]*">([^<]+)/i,replaceTagsAndSpaces),d={__id:d,__name:f};__shouldProcess("cards",
d)&&processCard(c[e],d);a.cards.push(d)}}}
function processCard(b,a){var c=a.__id;AnyBalance.trace("Обработка карты "+a.__name);getParam(b,a,"cards.balance",/overallAmount\b[^>]*>([\s\S]*?)<\/span>/i,replaceTagsAndSpaces,parseBalance);getParam(b,a,"cards.currency cards.balance cards.cash cards.electrocash cards.debt cards.maxlimit".split(" "),/overallAmount\b[^>]*>([\s\S]*?)<\/span>/i,replaceTagsAndSpaces,parseCurrency);getParam(b,a,"cards.cardNumber",/<[^>]*class="accountNumber\b[^"]*">([^<,]+)/i,replaceTagsAndSpaces);getParam(b,a,"cards.till",
/<[^>]*class="accountNumber\b[^"]*">[^<]+,\s+действует (?:до|по)([^<]+)/i,replaceTagsAndSpaces,parseDateWord);getParam(b,a,"cards.accnum",/<[^>]*class="accountNumber\b[^"]*">([^<,]+)/i,replaceTagsAndSpaces);getParam(b,a,"cards.status",/<[^>]*class="detailStatus\b[^"]*">([^<]+)/i,replaceTagsAndSpaces);getParam(b,a,"cards.is_blocked",/Blocked.jpg/i,null,function(a){return!!a});AnyBalance.isAvailable("cards.userName","cards.own","cards.cash","cards.electrocash","cards.minpay","cards.minpaydate","cards.maxlimit",
"cards.debt","cards.debt_date")&&(b=AnyBalance.requestGet(nodeUrl+"/PhizIC/private/cards/detail.do?id="+c),getParam(b,a,"cards.userName",/Держатель карты:[\s\S]*?<td[^>]*>([\s\S]*?)<\/td>/,replaceTagsAndSpaces,capitalFirstLetters),getParam(b,a,"cards.accnum",/Номер счета карты:[\s\S]*?<td[^>]*>([\s\S]*?)<\/td>/,replaceTagsAndSpaces),getParam(b,a,"cards.cash",/Для снятия наличных:[\s\S]*?<td[^>]*>([\s\S]*?)<\/td>/i,replaceTagsAndSpaces,parseBalance),getParam(b,a,"cards.electrocash",/для покупок:[\s\S]*?<td[^>]*>([\s\S]*?)<\/td>/i,
replaceTagsAndSpaces,parseBalance),getParam(b,a,"cards.minpay",/Обязательный платеж[\s\S]*?<td[^>]*>([\s\S]*?)<\/td>/i,replaceTagsAndSpaces,parseBalance),getParam(b,a,"cards.minpaydate",/Дата платежа:[\s\S]*?<td[^>]*>([\s\S]*?)<\/td>/,replaceTagsAndSpaces,parseDateWord),getParam(b,a,"cards.maxlimit",/Кредитный лимит[\s\S]*?<td[^>]*>([\s\S]*?)<\/td>/i,replaceTagsAndSpaces,parseBalance),getParam(b,a,"cards.own",/Собственные средства:[\s\S]*?<td[^>]*>([\s\S]*?)<\/td>/i,replaceTagsAndSpaces,parseBalance),
getParam(b,a,"cards.debt",/Общая задолженность[\s\S]*?<td[^>]*>([\s\S]*?)<\/td>/i,replaceTagsAndSpaces,parseBalance),getParam(b,a,"cards.debt_date",/Дата формирования(?:\s|<[^>]*>)+отчета:[\s\S]*?<td[^>]*>([\s\S]*?)<\/td>/i,replaceTagsAndSpaces,parseDateWord));AnyBalance.isAvailable("cards.transactions10")&&processCardLast10Transactions(a);AnyBalance.isAvailable("cards.transactions")&&processCardTransactions(a)}
function processLoans(b,a){if(AnyBalance.isAvailable("loans")){b=AnyBalance.requestGet(nodeUrl+"/PhizIC/private/loans/list.do");var c=getElements(b,/<div[^>]+class="productCover[^"]*activeProduct[^>]*">/ig);AnyBalance.trace("Найдено кредитов: "+c.length);a.loans=[];for(var e=0;e<c.length;++e){var d=getParam(c[e],null,null,/id=(\d+)/i),f=getParam(c[e],null,null,/<span[^>]*title="([^"]+)/i,replaceTagsAndSpaces);b=AnyBalance.requestGet(nodeUrl+"/PhizIC/private/loans/detail.do?id="+d);var g=getParam(b,
null,null,/Номер ссудного счета:[^]*?<td[^>]*>([^]*?)<\/td>/i,replaceTagsAndSpaces),d={__id:d,num:g,__name:f};__shouldProcess("loans",d)&&processLoan(b,d);a.loans.push(d)}}}
function processLoan(b,a){AnyBalance.trace("Обработка кредита "+a.__name);getParam(b,a,"loans.balance",/Осталось оплатить:[^]*?<td[^>]*>([^]*?)<\/td>/i,replaceTagsAndSpaces,parseBalance);getParam(b,a,["loans.currency","loans.balance","loans.loan_ammount","loans.minpay"],/Осталось оплатить:[^]*?<td[^>]*>([^]*?)<\/td>/i,replaceTagsAndSpaces,parseCurrency);getParam(b,a,"loans.minpaydate",/Внести до:[^]*?<td[^>]*>([^]*?)<\/td>/i,replaceTagsAndSpaces,parseDateWord);getParam(b,a,"loans.minpay",/<span[^>]*detailAmount[^>]*>([\s\S]*?)<\/span>/i,
replaceTagsAndSpaces,parseBalance);getParam(b,a,"loans.loan_ammount",/Сумма кредита:[^]*?<td[^>]*>([^]*?)<\/td>/i,replaceTagsAndSpaces,parseBalance);getParam(b,a,"loans.userName",/ФИО заемщика:[^]*?<td[^>]*>([^]*?)<\/td>/i,replaceTagsAndSpaces,capitalFirstLetters);getParam(b,a,"loans.agreement",/Номер договора:[^]*?<td[^>]*>([^]*?)<\/td>/i,replaceTagsAndSpaces);getParam(b,a,"loans.return_type",/Способ погашения:[^]*?<td[^>]*>([^]*?)<\/td>/i,replaceTagsAndSpaces);getParam(b,a,"loans.date_start",/Кредит открыт:[^]*?<td[^>]*>([^]*?)<\/td>/i,
replaceTagsAndSpaces,parseDateWord);getParam(b,a,"loans.till",/Дата закрытия кредита:[^]*?<td[^>]*>([^]*?)<\/td>/i,replaceTagsAndSpaces,parseDateWord);getParam(b,a,"loans.place",/Место оформления:[^]*?<td[^>]*>([^]*?)<\/td>/i,replaceTagsAndSpaces)}
function processMetalAccounts(b,a){if(AnyBalance.isAvailable("accounts_met")){b=AnyBalance.requestGet(nodeUrl+"/PhizIC/private/ima/list.do");var c=getElements(b,/<div[^>]+class="productCover[^"]*activeProduct[^>]*">/ig);AnyBalance.trace("Найдено мет. счетов: "+c.length);a.accounts_met=[];for(var e=0;e<c.length;++e){var d=getParam(c[e],null,null,/id=(\d+)/i),f=getParam(c[e],null,null,/<span[^>]*title="([^"]+)/i,replaceTagsAndSpaces),g=getParam(b,null,null,/"productNumberBlock"(?:[^>]*>){2}\s*([^<]+)/i,
[/\D/g,""]),d={__id:d,num:g,__name:f};__shouldProcess("accounts_met",d)&&processMetalAccount(b,d);a.accounts_met.push(d)}}}
function processMetalAccount(b,a){AnyBalance.trace("Обработка металлического счета "+a.__name);getParam(b,a,"accounts_met.weight",/"overallAmount"([^>]*>){2}/i,replaceTagsAndSpaces,parseBalance);getParam("г.",a,["accounts_met.weight_units","accounts_met.weight"]);getParam(b,a,"accounts_met.balance",/По курсу покупки Банка:([^]*?)<\/div>/i,replaceTagsAndSpaces,parseBalance);getParam(b,a,"accounts_met.currency",/По курсу покупки Банка:([^]*?)<\/div>/i,replaceTagsAndSpaces,parseCurrency);getParam(b,
a,"accounts_met.date_start",/Открыт:[^]*?<td[^>]*>([^]*?)<\/td>/i,replaceTagsAndSpaces,parseDateWord);AnyBalance.isAvailable("accounts_met.transactions")&&processMetalAccountTransactions(b,a)}
function processProfile(b,a){if(AnyBalance.isAvailable("info")){AnyBalance.trace("Разбираем профиль...");var c=a.info={};b=AnyBalance.requestGet(nodeUrl+"/PhizIC/private/userprofile/userSettings.do");getParam(b,c,"info.fio",/<span[^>]+"userFIO"[^>]*>([^]*?)<\/span>/i,replaceTagsAndSpaces,capitalFirstLetters);getParam(b,c,"info.hphone",/Домашний телефон:[^]*?<span[^>]+"phoneNumber"[^>]*>([^]*?)<\/span>/i,replaceTagsAndSpaces);getParam(b,c,"info.phone",/Мобильный телефон:[^]*?<span[^>]+"phoneNumber"[^>]*>([^]*?)<\/span>/i,
replaceTagsAndSpaces);getParam(b,c,"info.email",/<span[^>]+userEmail[^>]*>([^]*?)<\/span>/i,replaceTagsAndSpaces);getParam(b,c,"info.passport",/Паспорт гражданина РФ[^]*?<td[^>]+class="docNumber"[^>]*>([^]*?)<\/td>/i,replaceTagsAndSpaces);getParam(b,c,"info.snils",/Страховое свидетельство[^]*?<div[^>]+class="documentNumber"[^>]*>([^]*?)<\/div>/i,replaceTagsAndSpaces);getParam(b,c,"info.inn",/<div[^>]*documentTitle[^>]*>\s*ИНН[^]*?<div[^>]+class="documentNumber"[^>]*>([^]*?)<\/div>/i,replaceTagsAndSpaces)}}
function sortObject(b,a){return b.sort(function(b,e){return b[a]>e[a]?-1:b[a]<e[a]?1:0})}function getFormattedDate(b){var a=new Date,c=10>a.getDate()?"0"+a.getDate():a.getDate(),e=10>a.getMonth()+1?"0"+(a.getMonth()+1):a.getMonth()+1;b=isset(b)?a.getFullYear()-b:a.getFullYear();return c+"/"+e+"/"+b}function getParamByName(b,a){return getParam(b,null,null,new RegExp("name=[\"']"+a+'["\'][^>]*value=["\']([^"\']+)"',"i"))}
function processRates(b,a){AnyBalance.trace("Fetching rates...");getParam(b,a,"eurPurch",/"currencyRateName"[^>]*>EUR(?:[^>]*>){2}([^<]*)/i,null,parseBalance);getParam(b,a,"eurSell",/"currencyRateName"[^>]*>EUR(?:[^>]*>){5}([^<]*)/i,null,parseBalance);getParam(b,a,"usdPurch",/"currencyRateName"[^>]*>USD(?:[^>]*>){2}([^<]*)/i,null,parseBalance);getParam(b,a,"usdSell",/"currencyRateName"[^>]*>USD(?:[^>]*>){5}([^<]*)/i,null,parseBalance)}
function fetchNewThanks(b,a){AnyBalance.trace("Попробуем получить Спасибо от сбербанка...");if(AnyBalance.isAvailable("spasibo")){html=AnyBalance.requestGet(b+"/PhizIC/private/async/loyalty.do");var c=getParam(html,null,null,/^\s*(https?:\/\/\S*)/i,replaceTagsAndSpaces);c?(html=AnyBalance.requestGet(c),getParam(html,a,"spasibo",/<span[^>]*balance__thanks-count[^>]*>([\s\S]*?)<\/span>/i,replaceTagsAndSpaces,parseBalance)):AnyBalance.trace("Не удаётся получить ссылку на спасибо от сбербанка: "+html)}}
function parseSmallDateSilent(b){return parseSmallDate(b,!0)}function parseSmallDate(b,a){var c=parseSmallDateInternal(b);a||AnyBalance.trace("Parsed small date "+new Date(c)+" from "+b);return c}
function parseSmallDateInternal(b){var a=b.match(/(\d+):(\d+)/)||[,0,0],c=new Date;if(/сегодня/i.test(b))return a=new Date(c.getFullYear(),c.getMonth(),c.getDate(),+a[1],+a[2],0),a.getTime();if(/вчера/i.test(b))return a=new Date(c.getFullYear(),c.getMonth(),c.getDate()-1,+a[1],+a[2],0),a.getTime();if(a=/(\d+)[^\d]+(\d+)/i.exec(b))return b=c.getFullYear(),c.getMonth()+1<+a[2]&&--b,a=new Date(b,+a[2]-1,+a[1]),a.getTime();AnyBalance.trace("Не удалось распарсить дату: "+b)};function requestApiLogin(b,a,c){return requestApiInner("https://online.sberbank.ru:4477/CSAMAPI/"+b,a,!1,c)}function requestApi(b,a,c){return requestApiInner("https://node1.online.sberbank.ru:4477/mobile9/"+b,a,!0,c)}
function requestApiInner(b,a,c,e){a=c?a:joinObjects(a,{version:"9.00",appType:"android",appVersion:"6.0.0",deviceName:"AnyBalanceAPI"});a=AnyBalance.requestPost(b,a,{Connection:"keep-alive","User-Agent":"Mobile Device"});b=getParam(a,null,null,/<status>\s*<code>\s*(-?\d+)\s*<\/code>/i,null,parseBalance);if(!/<status>\s*<code>\s*0\s*<\/code>/i.test(a)&&(AnyBalance.trace(a),!e))throw e=sumParam(a,null,null,/<error>\s*<text>\s*(?:<!\[CDATA\[)?([\s\S]*?)(?:\]\]>)?\s*<\/text>\s*<\/error>/ig,replaceTagsAndSpaces,
null,aggregate_join),e=new AnyBalance.Error(e||"Ошибка при обработке запроса!",null,/неправильный идентификатор/i.test(e)),e.code=b,e;return a}function getToken(b){var a=getParam(b,null,null,/<token>([^<]+)<\/token>/i);if(!a)throw AnyBalance.trace(b),new AnyBalance.Error("Не удалось найти токен авторизации, сайт изменен?");return a}
function loginAPI(){var b=AnyBalance.getPreferences();AnyBalance.trace("Входим через API мобильного приложения...");var a=AnyBalance.getData("guid",""),c=AnyBalance.getData("devid","");c||(c=hex_md5(b.login+" "+Math.random()),AnyBalance.setData("devid",c));var e=b.pin||AnyBalance.getData("pin","11223");b.pin||AnyBalance.setData("pin",e);if(a){AnyBalance.trace("Устройство уже привязано!");AnyBalance.trace("guid is: "+a);try{d=requestApiLogin("login.do",{operation:"button.login",mGUID:a,devID:c,password:e})}catch(f){if(7==
f.code)AnyBalance.trace(f.message+": Надо перегенерить guid"),a=null;else throw f;}}if(!a){AnyBalance.trace("Необходимо привязать устройство!");var d=requestApiLogin("registerApp.do",{operation:"register",login:b.login,devID:c}),b=getElement(d,/<mGUID>/i,replaceTagsAndSpaces);if(!b)throw AnyBalance.trace(d),new AnyBalance.Error("Не удалось найти токен регистрации, сайт изменен?");AnyBalance.setData("guid",b);AnyBalance.trace("mGUID is: "+b);d=AnyBalance.retrieveCode("Пожалуйста, введите код из смс, для привязки данного устройства.",
null,{time:12E4,inputType:"number"});requestApiLogin("registerApp.do",{operation:"confirm",mGUID:b,smsPassword:d});AnyBalance.trace("Успешно привязали устройство. Создадим PIN...");d=requestApiLogin("registerApp.do",{operation:"createPIN",mGUID:b,password:e,isLightScheme:"true",devID:c});AnyBalance.saveData()}c=getToken(d);if(!c)throw AnyBalance.trace(d),new AnyBalance.Error("Не удалось получить токен авторизации. Сайт изменен?");requestApi("postCSALogin.do",{token:c});return c}var g_products;
function getProductsXMLApi(){g_products||(g_products=requestApi("private/products/list.do",{showProductsType:"cards,accounts,imaccounts,loans,deposits"}));return g_products}
function processCardsAPI(b){if(AnyBalance.isAvailable("cards")){var a=getProductsXMLApi();b.cards=[];if(a=getElement(a,/<cards>/i)){a=getElements(a,/<card>/ig);AnyBalance.trace("Найдено "+a.length+" карт");for(var c=0;c<a.length;c++){var e=a[c],d=getElement(e,/<id>/i,replaceTagsAndSpaces),f=getElement(e,/<number>/i,replaceTagsAndSpaces),g=getElement(e,/<name>/i,replaceTagsAndSpaces),d={__id:d,__name:g+" "+f,cardNumber:f};__shouldProcess("cards",d)&&(processCardAPI(e,d),b.cards.push(d))}}else AnyBalance.trace("Карты не обнаружены")}}
function processCardAPI(b,a){AnyBalance.trace("Обрабатываем карту "+a.__name);var c=getElement(b,/<availableLimit>/i);getParam(c,a,"cards.balance",/<amount>([\s\S]*?)<\/amount>/i,replaceTagsAndSpaces,parseBalance);getParam(c,a,["cards.currency","cards.balance"],/<currency>\s*<code>([\s\S]*?)<\/code>/i,replaceTagsAndSpaces);getParam(b,a,"cards.status",/<state>([\s\S]*?)<\/state>/i,replaceTagsAndSpaces);getParam(b,a,"cards.type",/<type>([\s\S]*?)<\/type>/i,replaceTagsAndSpaces);b=requestApi("private/cards/info.do",
{id:a.__id});getParam(b,a,"cards.cardName",/<holderName>([\s\S]*?)<\/holderName>/i,replaceTagsAndSpaces);c=getElement(b,/<availableCashLimit>/i);getParam(c,a,"cards.cash",/<amount>([\s\S]*?)<\/amount>/i,replaceTagsAndSpaces,parseBalance);c=getElement(b,/<purchaseLimit>/i);getParam(c,a,"cards.electrocash",/<amount>([\s\S]*?)<\/amount>/i,replaceTagsAndSpaces,parseBalance);getParam(b,a,"cards.accnum",/<accountNumber>([\s\S]*?)<\/accountNumber>/i,replaceTagsAndSpaces);AnyBalance.isAvailable("cards.transactions10")&&
processCardAPITransactions(a)}
function processCardAPITransactions(b){try{var a=requestApi("private/cards/abstract.do",{id:b.__id,count:100,paginationSize:100}),c=getElements(a,/<operation>/ig);AnyBalance.trace("Найдено "+c.length+" последних транзакций");b.transactions=[];for(a=0;a<c.length;a++){var e=c[a],d={};getParam(e,d,"cards.transactions10.time",/<date>([\s\S]*?)<\/date>/i,replaceTagsAndSpaces,parseDate);getParam(e,d,"cards.transactions10.sum",/<amount>([\s\S]*?)<\/amount>/i,replaceTagsAndSpaces,parseBalance);getParam(e,
d,["cards.transactions10.currency","cards.transactions10.sum"],/<currency>\s*<code>([\s\S]*?)<\/code>/i,replaceTagsAndSpaces);getParam(e,d,"cards.transactions10.name",/<description>\s*(?:<!\[CDATA\[)?([\s\S]*?)(?:\]\]>)?\s*<\/description>/i,replaceTagsAndSpaces);b.transactions.push(d)}}catch(f){AnyBalance.trace("Не удалось получить транзакции для карты "+b.__name+": "+f.message)}}
function processAccountsAPI(b){if(AnyBalance.isAvailable("accounts")){var a=getProductsXMLApi();b.accounts=[];if(a=getElement(a,/<accounts>/i)){a=getElements(a,/<account>/ig);AnyBalance.trace("Найдено "+a.length+" счетов");for(var c=0;c<a.length;c++){var e=a[c],d=getElement(e,/<id>/i,replaceTagsAndSpaces),f=getElement(e,/<number>/i,replaceTagsAndSpaces),g=getElement(e,/<name>/i,replaceTagsAndSpaces),d={__id:d,__name:g+" "+f,num:f};__shouldProcess("accounts",d)&&(processAccountAPI(e,d),b.accounts.push(d))}}else AnyBalance.trace("Счета не обнаружены")}}
function parseBoolAPI(b){return/true/i.test(b)}
function processAccountAPI(b,a){AnyBalance.trace("Обрабатываем счет "+a.__name);var c=getElement(b,/<balance>/i);getParam(c,a,"accounts.balance",/<amount>([\s\S]*?)<\/amount>/i,replaceTagsAndSpaces,parseBalance);getParam(c,a,["accounts.currency","accounts.balance"],/<currency>\s*<code>([\s\S]*?)<\/code>/i,replaceTagsAndSpaces);getParam(b,a,"accounts.rate",/<rate>([\s\S]*?)<\/rate>/i,replaceTagsAndSpaces,parseBalance);getParam(b,a,"accounts.till",/<closeDate>([\s\S]*?)<\/closeDate>/i,replaceTagsAndSpaces,
parseDate);getParam(b,a,"accounts.status",/<state>([\s\S]*?)<\/state>/i,replaceTagsAndSpaces);b=requestApi("private/accounts/info.do",{id:a.__id});getParam(b,a,"accounts.period",/<period>([\s\S]*?)<\/period>/i,replaceTagsAndSpaces);getParam(b,a,"accounts.balance_min",/<irreducibleAmt>([\s\S]*?)<\/irreducibleAmt>/i,replaceTagsAndSpaces,parseBalance);getParam(b,a,"accounts.prolong",/<prolongation>([\s\S]*?)<\/prolongation>/i,replaceTagsAndSpaces,parseBoolAPI);AnyBalance.isAvailable("accounts.transactions")&&
processAccountAPITransactions(a)}
function processAccountAPITransactions(b){try{var a=new Date,c=new Date(a.getFullYear()-1,a.getMonth(),a.getDate()),e=requestApi("private/accounts/abstract.do",{id:b.__id,from:fmtDate(c),to:fmtDate(a),paginationSize:1E3,paginationOffset:0}),d=getElements(e,/<operation>/ig);AnyBalance.trace("Найдено "+d.length+" последних транзакций");b.transactions=[];for(a=0;a<d.length;a++){var f=d[a],c={};getParam(f,c,"accounts.transactions10.time",/<date>([\s\S]*?)<\/date>/i,replaceTagsAndSpaces,parseDate);getParam(f,
c,"accounts.transactions10.sum",/<amount>([\s\S]*?)<\/amount>/i,replaceTagsAndSpaces,parseBalance);getParam(f,c,["accounts.transactions10.currency","accounts.transactions10.sum"],/<currency>\s*<code>([\s\S]*?)<\/code>/i,replaceTagsAndSpaces);getParam(f,c,"accounts.transactions10.name",/<description>\s*(?:<!\[CDATA\[)?([\s\S]*?)(?:\]\]>)?\s*<\/description>/i,replaceTagsAndSpaces);b.transactions.push(c)}}catch(g){AnyBalance.trace("Не удалось получить транзакции для счета "+b.__name+": "+g.message)}}
function processInfoAPI(b){if(AnyBalance.isAvailable("info")){b=b.info={};var a=requestApi("private/profile/info.do"),c=create_aggregate_join(" ");sumParam(a,b,"info.fio",/<surName>([\s\S]*?)<\/surName>/i,replaceTagsAndSpaces,null,c);sumParam(a,b,"info.fio",/<firstName>([\s\S]*?)<\/firstName>/i,replaceTagsAndSpaces,null,c);sumParam(a,b,"info.fio",/<patrName>([\s\S]*?)<\/patrName>/i,replaceTagsAndSpaces,null,c);getParam(a,b,"info.phone",/<mobilePhone>([\s\S]*?)<\/mobilePhone>/i,replaceTagsAndSpaces);
getParam(a,b,"info.email",/<email>([\s\S]*?)<\/email>/i,replaceTagsAndSpaces);for(var a=getElements(a,/<document>/ig),e=0;e<a.length;e++){var d=a[e],f=getElement(d,/<documentName>/i,replaceTagsAndSpaces);/паспорт/i.test(f)?(sumParam(d,b,"info.passport",/<documentSeries>([\s\S]*?)<\/documentSeries>/i,replaceTagsAndSpaces,null,c),sumParam(d,b,"info.passport",/<documentNumber>([\s\S]*?)<\/documentNumber>/i,replaceTagsAndSpaces,null,c)):AnyBalance.trace("Неизвестный документ: "+d)}}}
function processRatesAPI(b){if(isAvailable(["eurPurch","eurSell","usdPurch","usdSell"])){AnyBalance.trace("Fetching rates...");var a=requestApi("private/rates/list.do");getParam(a,b,"eurPurch",/RUB<\/code>\s*<amount>([^<]+)<\/amount>\s*<\/from>\s*<to>\s*<code>EUR/i,null,parseBalance);getParam(a,b,"eurSell",/EUR<\/code>\s*<\/from>\s*<to>\s*<code>RUB<\/code>([\s\S]*?)<\//i,null,parseBalance);getParam(a,b,"usdPurch",/RUB<\/code>\s*<amount>([^<]+)<\/amount>\s*<\/from>\s*<to>\s*<code>USD/i,null,parseBalance);
getParam(a,b,"usdSell",/USD<\/code>\s*<\/from>\s*<to>\s*<code>RUB<\/code>([\s\S]*?)<\//i,null,parseBalance)}};
