var g_headers={Accept:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8","User-Agent":"android-async-http/1.4.1 (http://loopj.com/android-async-http)"},g_appKey="afhgfgfdg56ujdj6rtymr67yjrt76tyherhdbryj6r46df57",g_baseurl="https://napi.privatbank.ua/",g_login_hash="",g_imei="35374906******L",g_simsn="897010266********L",g_session="";
function requestJson(b,c,d){var a=[],e;for(e in b)a.push(encodeURIComponent(e)+"="+encodeURIComponent(b[e]));a.push(encodeURIComponent("cookie")+"="+encodeURIComponent(g_session));a.push(encodeURIComponent("simSN")+"="+encodeURIComponent(g_simsn));a.push(encodeURIComponent("imei")+"="+encodeURIComponent(g_login_hash));a.push(encodeURIComponent("appkey")+"="+encodeURIComponent(g_appKey));a.push(encodeURIComponent("language")+"=ru");a.push(encodeURIComponent("lon")+"=0.0");a.push(encodeURIComponent("device")+
"="+encodeURIComponent("SM-G900F|samsung"));a.push(encodeURIComponent("version")+"="+encodeURIComponent("5.11.02"));a.push(encodeURIComponent("versionOS")+"="+encodeURIComponent("5.0"));a.push(encodeURIComponent("lat")+"="+encodeURIComponent("0.0"));a.push(encodeURIComponent("ireal")+"="+encodeURIComponent(g_imei));b=g_baseurl+"iapi2/"+c+"?"+a.join("&");c=AnyBalance.requestGet(b,g_headers);c=getJson(c);if("ok"!=c.st&&(AnyBalance.trace("Error getting "+b+": "+JSON.stringify(c)),d))throw new AnyBalance.Error(d+
": "+(c.err||"").replace(/:\s[^&]&/,": "),null,/Неверный логин или пароль/i.test(c.err));return c}
function login(b,c){b=AnyBalance.getPreferences();AnyBalance.setDefaultCharset("utf-8");checkEmpty(b.login,"Введите логин!");checkEmpty(b.password,"Введите пароль!");var d="+"+b.login.replace(/\D+/g,"");if(g_session){AnyBalance.trace("Найдена активная сессия, проверим её.");var a=requestJson({},"props_full");"ok"!=a.st?(AnyBalance.trace("Сессия испорчена, будем заново авторизовываться"),g_session=""):AnyBalance.trace("Сессия действует, используем её.")}g_session?AnyBalance.trace():(a=hex_md5(d),AnyBalance.trace(a+
" "+typeof a),g_login_hash=getParam(a,null,null,null,[/([\s\S]{8})([\s\S]{4})([\s\S]{4})([\s\S]{4})([\s\S]{12})/,"$1-$2-$3-$4-$5"]),AnyBalance.trace("Login imei param is: "+g_login_hash),g_imei=generateImei(d,g_imei),g_simsn=generateSimSN(d,g_simsn),a=requestJson({},"props_full"),/phone not linked to imei/i.test(a.err)?(AnyBalance.trace("Устройство нужно привязать."),requestJson({},"unlink_phone"),a=requestJson({login:d},"auth_phone","Не удалось начать процесс привязки"),d=a.id,requestJson({id:d,
pass:b.password},"auth_pass","Не удалось зайти с паролем"),a=AnyBalance.retrieveCode("Пожалуйста, введите код из смс, для привязки данного устройства.",null,{time:3E5}),a=requestJson({id:d,otp:a},"auth_otp","Не удалось привязать устройство"),g_session=a.cookie,AnyBalance.trace("Успешно привязали устройство.")):(AnyBalance.trace("Похоже что устройство уже привязано."),a=requestJson({pass:b.password,bank:""},"chpass","Не удалось авторизоваться, проверьте логин и пароль."),g_session=a.cookie),__setLoginSuccessful());
if(!g_session)throw new AnyBalance.Error("Не удалось получить токен авторизации!");requestJson({},"banks");a=requestJson({},"props_full");AnyBalance.isAvailable("info.mphone")&&(c.info={},getParam(a.phone,c.info,"info.mphone"));return a}
function processCards(b,c){if(AnyBalance.isAvailable("cards")){var d=b.cards;AnyBalance.trace("Найдено карт: "+d.length);c.cards=[];for(var a=0;a<d.length;++a){var e=d[a],f={__id:e.cardid,__name:e.alias+" "+e.number,num:e.number};__shouldProcess("cards",f)&&processCard(e,f);c.cards.push(f)}}}
function processCard(b,c,d){getParam(b.holded+"",c,"cards.balance",null,null,parseBalanceSilent);getParam(b.ccy,c,"cards.currency");getParam(b.is_nfc,c,"cards.is_nfc",null,null,parseBoolean);getParam(b.is_acc_foreign,c,"cards.is_foreign",null,null,parseBoolean);getParam(b.rate+"",c,"cards.pct",null,null,parseBalanceSilent);getParam(b.status,c,"cards.status");getParam(b.type,c,"cards.type");getParam(b.is_credit,c,"cards.is_credit");getParam(b.finlimit+"",c,"cards.limit",null,null,parseBalanceSilent);
getParam(b.min_pay+"",c,"cards.minpay",null,null,parseBalanceSilent);AnyBalance.isAvailable("cards.transactions")&&processCardTransactions(b,c)}function parseBoolean(b){return"1"==b}function findCardDetails(b,c){for(var d=0;d<c.length;d++){var a=c[d];if(b==a.cardid)return a}return null};
