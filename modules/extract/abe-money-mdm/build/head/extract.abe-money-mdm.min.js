var g_headers={Accept:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8","Accept-Charset":"windows-1251,utf-8;q=0.7,*;q=0.3","Accept-Language":"ru-RU,ru;q=0.8,en-US;q=0.6,en;q=0.4",Connection:"keep-alive","User-Agent":"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.64 Safari/537.11"},g_baseurl="https://oldclient.mdmbank.ru";
function login(){var a=AnyBalance.getPreferences();AnyBalance.setOptions({SSL_ENABLED_PROTOCOLS:["TLSv1.1","TLSv1.2"]});checkEmpty(a.login,"Введите логин!");checkEmpty(a.password,"Введите пароль!");var b=AnyBalance.requestGet(g_baseurl+"/index.asp",addHeaders({Referer:g_baseurl+"/index.asp"}));if(!b||400<AnyBalance.getLastStatusCode())throw AnyBalance.trace(b),new AnyBalance.Error("Ошибка интернет-банка. Попробуйте обновить данные позже.");/logout\.asp/i.test(b)?AnyBalance.trace("Уже залогинены, отлично."):
b=AnyBalance.requestPost(g_baseurl+"/login.asp",{unc:a.login,pin:a.password},addHeaders({Referer:g_baseurl+"/login.asp"}));if(!/logout\.asp/i.test(b)&&(a=getElement(b,/<form[^>]+id="ib-loginotp-form"[^>]*>/i))){AnyBalance.trace("Требуется SMS-подтверждение входа. Запрашиваем его.");var d=getParam(a,null,null,/<label[^>]*for="password"[^>]*>([\s\S]*?)<\/label>/i,[replaceTagsAndSpaces,/и нажмите.*/i,""]),b=AnyBalance.requestPost(g_baseurl+"/ajax2.asp",{ajaxmode:"otpget"},addHeaders({Referer:g_baseurl+
"/loginotp.asp","X-Requested-With":"XMLHttpRequest"}));if("0"!=getJson(b).result)throw AnyBalance.trace(b),new AnyBalance.Error("Не удалось потребовать посылки SMS-подтверждения. Попробуйте ещё раз позже.");a=createFormParams(a,function(a,b,f,g){return"password"==f?AnyBalance.retrieveCode(d||"Пожалуйста, введите код из SMS для подтверждения входа в интернет-банк.\n\nВы можете отключить требование кода на вход в настройках своего интернет банка, чтобы не вводить его каждый раз. Это безопасно, совершение операций всё равно будет требовать ввода одноразового пароля.",
null,{inputType:"number",time:18E4}):g},!0);b=AnyBalance.requestPost(g_baseurl+"/loginotp.asp",a,addHeaders({Referer:g_baseurl+"/loginotp.asp"}))}if(!/logout\.asp/i.test(b)){if(a=getParam(b,null,null,/<div[^>]+class=['"]err['"][^>]*>([\s\S]*?)<\/div>/i,[replaceTagsAndSpaces,/\s*Вам выслан новый.*/i,""]))throw new AnyBalance.Error(a,null,/Неверный логин или пароль/i.test(a));if(a=getParam(b,null,null,/<label[^>]*>((?:[\s\S](?!<\/label>))*RetailWeb.Web.ClientLogin[\s\S]*?)<\/label>/i,replaceTagsAndSpaces))throw new AnyBalance.Error(a,
null,/Неверный логин или пароль/i.test(a));if(a=getParam(b,null,null,/<div id="error-dialog"[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces))throw new AnyBalance.Error(a,null,/Неверное имя пользователя или пароль/i.test(a));AnyBalance.trace(b);throw new AnyBalance.Error("Не удалось войти в интернет-банк. Сайт изменен?");}if(a=getElements(b,[/<form[^>]+>/ig,/Ознакомлен/i])[0])AnyBalance.trace(b),AnyBalance.trace("МДМ требует с чем-то ознакомиться... Ознакомливаемся"),a=createFormParams(a,function(a,
d,f,g){return/<input[^>]+checkbox/i.test(d)?getParam(b,null,null,/<input[^>]+value="([^"]*)/i,replaceHtmlEntities):g}),b=AnyBalance.requestPost(g_baseurl+"/alerts.asp",a,addHeaders({Referer:g_baseurl+"/alerts.asp"}));__setLoginSuccessful();return b}
function processCards(a,b){if(AnyBalance.isAvailable("cards")){a=AnyBalance.requestGet(g_baseurl+"/cards.asp",addHeaders({Referer:g_baseurl+"/index.asp"}));var d=getElement(a,/<table[^>]*card-table[^>]*>/i);if(d)for(a=getElements(d,[/<tr[^>]*>/ig,/<td[^>]*>/i]),AnyBalance.trace("Найдено "+a.length+" карт"),b.cards=[],d=0;d<a.length;d++){var c=a[d],e=getParam(c,null,null,/<a[^>]+href="[^"]*card-statement[^>]*>([\s\S]*?)<\/a>/i,replaceTagsAndSpaces),f=getParam(c,null,null,/<td[^>]+card-currency[^>]*>([\s\S]*?)<\/td>/i,
replaceTagsAndSpaces),e={__id:e,__name:e+" "+f,num:e};__shouldProcess("cards",e)&&processCard(c,e);b.cards.push(e)}else/На данный момент у Вас нет[^<]*карт/i.test(a)?AnyBalance.trace("Нет ни одной карты"):(AnyBalance.trace(a),AnyBalance.trace("Не удалось найти карты! Сайт изменен?"))}}
function processCard(a,b){AnyBalance.trace("Обрабатываем карту "+b.__name);getParam(a,b,"cards.currency cards.balance cards.limit cards.blocked cards.available cards.debt_main cards.debt_due cards.debt_pct cards.debt_peni cards.debt_comission cards.minpay cards.debt cards.transactions.sum_account".split(" "),/<td[^>]+class="card-currency"[^>]*>([\s\S]*?)<\/td>/i,replaceTagsAndSpaces);getParam(a,b,"cards.balance",/(?:[\s\S]*?<td[^>]*>){6}([\s\S]*?)<\/td>/i,replaceTagsAndSpaces,parseBalance);getParam(a,
b,"cards.blocked",/(?:[\s\S]*?<td[^>]*>){4}([\s\S]*?)<\/td>/i,replaceTagsAndSpaces,parseBalance);getParam(a,b,"cards.limit",/(?:[\s\S]*?<td[^>]*>){5}([\s\S]*?)<\/td>/i,replaceTagsAndSpaces,parseBalance);getParam(a,b,"cards.till",/(?:[\s\S]*?<td[^>]*>){3}([\s\S]*?)<\/td>/i,replaceTagsAndSpaces,parseDate);a=getParam(a,null,null,/<a[^>]+href="([^"]*card-statement[^"]*)"[^>]*>/i,replaceHtmlEntities);AnyBalance.isAvailable("cards.available","cards.debt_main","cards.debt_due","cards.debt_pct","cards.debt_peni",
"cards.debt_comission","cards.minpay","cards.debt","cards.minpay_till","cards.transactions")&&(html=AnyBalance.requestGet(joinUrl(g_baseurl,a),addHeaders({Referer:g_baseurl+"/cards.asp"})),getParam(html,b,"cards.available",/<td[^>]*>\s*Доступные средства[\s\S]*?<td[^>]*>([\s\S]*?)<\/td>/,replaceTagsAndSpaces,parseBalance),getParam(html,b,"cards.debt_main",/Сумма основной задолженности[\s\S]*?<td[^>]*>([\s\S]*?)<\/td>/,replaceTagsAndSpaces,parseBalance),getParam(html,b,"cards.debt_due",/Сумма просроченной задолженности[\s\S]*?<td[^>]*>([\s\S]*?)<\/td>/,
replaceTagsAndSpaces,parseBalance),getParam(html,b,"cards.debt_pct",/Начисленные проценты[\s\S]*?<td[^>]*>([\s\S]*?)<\/td>/,replaceTagsAndSpaces,parseBalance),getParam(html,b,"cards.debt_peni",/Просроченные проценты, штрафы, пени[\s\S]*?<td[^>]*>([\s\S]*?)<\/td>/,replaceTagsAndSpaces,parseBalance),getParam(html,b,"cards.debt_comission",/Комиссионная задолженность[\s\S]*?<td[^>]*>([\s\S]*?)<\/td>/,replaceTagsAndSpaces,parseBalance),getParam(html,b,"cards.minpay",/Минимальная сумма взноса[\s\S]*?<td[^>]*>([\s\S]*?)<\/td>/,
replaceTagsAndSpaces,parseBalance),getParam(html,b,"cards.minpay_till",/Минимальная сумма взноса(?:[\s\S]*?<td[^>]*>){2}([\s\S]*?)<\/tr>/,replaceTagsAndSpaces,parseDate),getParam(html,b,"cards.debt",/Сумма полной задолженности[\s\S]*?<td[^>]*>([\s\S]*?)<\/td>/,replaceTagsAndSpaces,parseBalance),getParam(html,b,"cards.overlimit",/Сумма использованных сверхлимитных средств[\s\S]*?<td[^>]*>([\s\S]*?)<\/td>/,replaceTagsAndSpaces,parseBalance),getParam(html,b,"cards.accnum",/Р\/с([^<]*)/i,replaceTagsAndSpaces),
AnyBalance.isAvailable("cards.transactions")&&processCardTransactions(html,b));return b}var replaceSign=[/<td[^>]+red[^>]*>/i,"-",replaceTagsAndSpaces];
function processCardTransactions(a,b){var d={date:{re:/Дата проведения/i,result_func:parseDateSilent},date_done:{re:/Дата отражения/i,result_func:parseDateSilent},descr:{re:/Детали операции/i,result_func:null},place:{re:/Город и страна/i,result_func:null},sum:{re:/Сумма операции/i,result_func:parseBalanceSilent},currency:{re:/Валюта операции/i,result_func:null,result_name:["currency","sum"]},fee:{re:/Комиссия Банка/i,result_func:parseBalanceSilent},sum_in:{re:/Сумма зачисления/i,result_name:"sum_done",
result_sum:!0,result_replace:replaceSign,result_func:parseBalanceSilent},sum_out:{re:/Сумма зачисления/i,result_name:"sum_done",result_sum:!0,result_replace:replaceSign,result_func:parseBalanceSilent}},c=new Date,e=new Date(c.getFullYear()-5,c.getMonth(),1);a=AnyBalance.requestPost(g_baseurl+"/card-statement.asp",{id:getParam(a,null,null,/<input[^>]+name="id"[^>]*value="([^"]*)/i,replaceHtmlEntities),fromdate:fmtDate(e),todate:fmtDate(c)},addHeaders({Referer:g_baseurl+"/card-statement.asp"}));if(c=
getElement(a,/<table[^>]+class="card-table"[^>]*>/i)){b.transactions=[];var f;processTable(c,b.transactions,"cards.transactions.",d,function(a){(a=getParam(a,null,null,/\d{4,6}x{6,8}\d{4}/i))&&(f=a)},function(a,b){getParam(f,a,b+"card")})}else AnyBalance.trace(a),AnyBalance.trace("Не удалось найти таблицу транзакций по карте!")}
function processCredits(a,b){if(AnyBalance.isAvailable("credits")){a=AnyBalance.requestGet(g_baseurl+"/loans.asp",addHeaders({Referer:g_baseurl+"/index.asp"}));var d=getElement(a,/<table[^>]*card-table[^>]*>/i);if(d)for(a=getElements(d,[/<tr[^>]*>/ig,/<td[^>]*>/i]),AnyBalance.trace("Найдено "+a.length+" кредитов"),b.credits=[],d=0;d<a.length;d++){var c=a[d],e=getParam(c,null,null,/<a[^>]+href=["'][^"']*loan-statement.asp\?id=([^'"&]*)/i,null,html_entity_decode),f=getParam(c,null,null,/<a[^>]+href=["'][^"']*loan-statement.asp[^>]*>([\s\S]*?)<\/a>/i,
replaceTagsAndSpaces,html_entity_decode),g=getParam(c,null,null,/№\s*(\S[^<\s]+)/i),e={__id:e,__name:f,agreement:g};__shouldProcess("credits",e)&&processCredit(c,e);b.credits.push(e)}else/На данный момент у Вас нет[^<]*кредитов/i.test(a)?AnyBalance.trace("Нет ни одного кредита"):(AnyBalance.trace(a),AnyBalance.trace("Не удалось найти кредиты! Сайт изменен?"))}}
function processCredit(a,b){AnyBalance.trace("Обрабатываем кредит "+b.__name);getParam(a,b,["credits.currency","credits.balance","credits.minpay","credits.balance_acc"],/(?:[\s\S]*?<td[^>]*>){2}([\s\S]*?)<\/td>/i,replaceTagsAndSpaces);getParam(a,b,"credits.balance",/(?:[\s\S]*?<td[^>]*>){7}([\s\S]*?)<\/td>/i,replaceTagsAndSpaces,parseBalance);getParam(a,b,"credits.minpay",/(?:[\s\S]*?<td[^>]*>){6}([\s\S]*?)<\/td>/i,replaceTagsAndSpaces,parseBalance);getParam(a,b,"credits.minpay_till",/(?:[\s\S]*?<td[^>]*>){5}([\s\S]*?)<\/td>/i,
replaceTagsAndSpaces,parseDate);getParam(a,b,"credits.date_end",/(?:[\s\S]*?<td[^>]*>){4}([\s\S]*?)<\/td>/i,replaceTagsAndSpaces,parseDate);getParam(a,b,"credits.date_start",/(?:[\s\S]*?<td[^>]*>){3}([\s\S]*?)<\/td>/i,replaceTagsAndSpaces,parseDate);a=getParam(a,null,null,/<a[^>]+href=["']([^"']*loan-statement[^'"]*)/i,replaceHtmlEntities);AnyBalance.isAvailable("credits.transactions","credits.accnum","credits.pct","credita.balance_acc","credits.schedule")&&(a=AnyBalance.requestGet(joinUrl(g_baseurl,
a),addHeaders({Referer:g_baseurl+"/credits.asp"})),getParam(a,b,"credits.pct",/Процентная ставка[\s\S]*?<h1[^>]*>([\s\S]*?)<\/h1>/,replaceTagsAndSpaces,parseBalance),getParam(a,b,"credits.accnum",/Счет погашения[\s\S]*?<h1[^>]*>([\s\S]*?)<\/h1>/,replaceTagsAndSpaces),getParam(a,b,"credita.balance_acc",/Остаток на счете погашения[\s\S]*?<h1[^>]*>([\s\S]*?)<\/h1>/,replaceTagsAndSpaces,parseBalance),AnyBalance.isAvailable("credits.schedule")&&processCreditSchedule(a,b),AnyBalance.isAvailable("credits.transactions")&&
processCreditTransactions(a,b));return b}
function processCreditSchedule(a,b){var d={date:{re:/Дата платежа/i,result_func:parseDateSilent},loan:{re:/Ссуда/i,result_process:function(a,b,c){b=replaceAll(b,replaceTagsAndSpaces);getParam(b,c,a+"debt_main",/([^\/]*)/i,null,parseBalanceSilent);getParam(b,c,a+"debt_pct",/[^\/]*\/([^\/]*)/i,null,parseBalanceSilent);getParam(b,c,a+"debt_fee",/(?:[^\/]*\/){2}([^\/]*)/i,null,parseBalanceSilent)}},sum:{re:/Сумма/i,result_func:parseBalanceSilent},balance:{re:/Остаток/i,result_func:parseBalanceSilent},
status:{re:/Состояние/i,result_func:null}},c=getParam(a,null,null,/График возврата кредита:[\s\S]*?<table[^>]*card-table[^>]*>([\s\S]*?)<\/table>/i);c?(b.schedule=[],processTable(c,b.schedule,"credits.schedule.",d)):(AnyBalance.trace(a),AnyBalance.trace("Не найден график возврата кредита"))}
function processCreditTransactions(a,b){var d={date:{re:/Дата/i,result_func:parseDateSilent},descr:{re:/Операция/i,result_func:null},sum:{re:/Сумма/i,result_func:parseBalanceSilent},currency:{re:/Валюта/i,result_func:null}},c=getParam(a,null,null,/Выписка по счету:[\s\S]*?<table[^>]*card-table[^>]*>([\s\S]*?)<\/table>/i);c?(b.transactions=[],processTable(c,b.transactions,"credits.transactions.",d)):(AnyBalance.trace(a),AnyBalance.trace("Не найдена выписка по кредитному счету"))}
function processInfo(a,b){b=b.info={};getParam(a,b,"info.fio",/<span[^>]+id="clientname"[^>]*>([\s\S]*?)<\/span>/i,replaceTagsAndSpaces);AnyBalance.isAvailable("info.name_last","info.name","info.name_patronymic","info.birth_place","info.birthday","info.inn","info.resident")&&(a=AnyBalance.requestGet(g_baseurl+"/services.asp",addHeaders({Referer:g_baseurl+"/index.asp"})),getParam(a,b,"info.name_last",/Фамилия:[\s\S]*?<input[^>]+value="([^"]*)/i,replaceHtmlEntities),getParam(a,b,"info.name",/Имя:[\s\S]*?<input[^>]+value="([^"]*)/i,
replaceHtmlEntities),getParam(a,b,"info.name_patronymic",/Отчество[\s\S]*?<input[^>]+value="([^"]*)/i,replaceHtmlEntities),getParam(a,b,"info.birth_place",/Место рождения[\s\S]*?<input[^>]+value="([^"]*)/i,replaceHtmlEntities),getParam(a,b,"info.birthday",/Дата рождения[\s\S]*?<input[^>]+value="([^"]*)/i,replaceHtmlEntities,parseDate),getParam(a,b,"info.inn",/ИНН:[\s\S]*?<input[^>]+value="([^"]*)/i,replaceHtmlEntities),getParam(a,b,"info.resident",/Резидентность:[\s\S]*?<b[^>]*>([\s\S]*?)<\/b>/i,
replaceTagsAndSpaces,function(a){return/да/i.test(a)}));if(AnyBalance.isAvailable("info.contacts")){a=AnyBalance.requestGet(g_baseurl+"/services-contacts.asp",addHeaders({Referer:g_baseurl+"/services.asp"}));var d={type:{re:/Тип/i,result_func:function(a){return/мобил/i.test(a)?"mobile":/эл/i.test(a)?"email":/домаш/i.test(a)?"home":/рабоч/i.test(a)?"work":a}},contact:{re:/Контакт/i,result_func:null}};if(a=getElement(a,/<table[^>]+class="card-table"[^>]*>/i))b.contacts=[],processTable(a,b.contacts,
"info.contacts.",d)}}
function processDeposits(a,b){if(AnyBalance.isAvailable("deposits")){a=AnyBalance.requestGet(g_baseurl+"/deposits.asp",addHeaders({Referer:g_baseurl+"/index.asp"}));var d=getElement(a,/<table[^>]*card-table[^>]*>/i);if(d)for(a=getElements(d,[/<tr[^>]*>/ig,/<td[^>]*>/i]),AnyBalance.trace("Найдено "+a.length+" депозитов"),b.deposits=[],d=0;d<a.length;d++){var c=a[d],e=getParam(c,null,null,/<a[^>]+href=["'][^"']*deposit-statement.asp\?id=([^'"&]*)/i,replaceHtmlEntities),f=getParam(c,null,null,/<a[^>]+href=["'][^"']*deposit-statement.asp[^>]*>([\s\S]*?)<\/a>/i,
replaceTagsAndSpaces),g=getParam(f,null,null,/\d{20}/),e={__id:e,__name:f,num:g};__shouldProcess("deposits",e)&&processDeposit(c,e);b.deposits.push(e)}else/На данный момент у Вас нет[^<]*депозитов/i.test(a)?AnyBalance.trace("Нет ни одного депозита"):(AnyBalance.trace(a),AnyBalance.trace("Не удалось найти депозиты! Сайт изменен?"))}}
function processDeposit(a,b){AnyBalance.trace("Обрабатываем депозит "+b.__name);getParam(a,b,["deposits.currency","deposits.balance","deposits.balance_start","deposits.transactions"],/(?:[\s\S]*?<td[^>]*>){5}([\s\S]*?)<\/td>/i,replaceTagsAndSpaces);getParam(a,b,"deposits.balance",/(?:[\s\S]*?<td[^>]*>){7}([\s\S]*?)<\/td>/i,replaceTagsAndSpaces,parseBalance);getParam(a,b,"credits.balance_start",/(?:[\s\S]*?<td[^>]*>){6}([\s\S]*?)<\/td>/i,replaceTagsAndSpaces,parseBalance);getParam(a,b,"deposits.pct",
/(?:[\s\S]*?<td[^>]*>){4}([\s\S]*?)<\/td>/i,replaceTagsAndSpaces,parseBalance);getParam(a,b,"deposits.date_end",/(?:[\s\S]*?<td[^>]*>){3}([\s\S]*?)<\/td>/i,replaceTagsAndSpaces,parseDate);getParam(a,b,"deposits.date_start",/(?:[\s\S]*?<td[^>]*>){2}([\s\S]*?)<\/td>/i,replaceTagsAndSpaces,parseDate);getParam(a,b,"deposits.name",/<a[^>]+href=["'][^"']*deposit-statement.asp[^>]*>[\s\S]*?<br[^>]*>([\s\S]*?)<\/a>/i,replaceTagsAndSpaces);a=getParam(a,null,null,/<a[^>]+href=["']([^"']*deposit-statement[^'"]*)/i,
replaceHtmlEntities);AnyBalance.isAvailable("deposits.transactions","deposits.next_pct")&&(a=AnyBalance.requestGet(joinUrl(g_baseurl,a),addHeaders({Referer:g_baseurl+"/credits.asp"})),getParam(a,b,"deposits.next_pct",/Дата следующей уплаты процентов:([^<]*)/,replaceTagsAndSpaces,parseDate),AnyBalance.isAvailable("credits.transactions")&&processDepositsTransactions(a,b));return b}
function processDepositsTransactions(a,b){var d={date:{re:/Дата/i,result_func:parseDateSilent},descr:{re:/Операция/i,result_func:null},sum:{re:/Сумма/i,result_replace:replaceSign,result_func:parseBalanceSilent},currency:{re:/Валюта/i,result_func:null}},c=new Date,e=new Date(c.getFullYear()-5,c.getMonth(),1);a=AnyBalance.requestPost(g_baseurl+"/deposit-statement.asp",{id:getParam(a,null,null,/<input[^>]+name="id"[^>]*value="([^"]*)/i,replaceHtmlEntities),fromdate:fmtDate(e),todate:fmtDate(c)},addHeaders({Referer:g_baseurl+
"/deposit-statement.asp"}));(c=getElement(a,/<table[^>]+card-table[^>]*>/i))?(b.transactions=[],processTable(c,b.transactions,"deposita.transactions.",d)):(AnyBalance.trace(a),AnyBalance.trace("Не удалось найти таблицу транзакций депозита!"))}
function processAccounts(a,b){if(AnyBalance.isAvailable("accounts")){a=AnyBalance.requestGet(g_baseurl+"/accounts.asp",addHeaders({Referer:g_baseurl+"/index.asp"}));var d=getElement(a,/<table[^>]*card-table[^>]*>/i);if(d)for(a=getElements(d,[/<tr[^>]*>/ig,/<td[^>]*>/i]),AnyBalance.trace("Найдено "+a.length+" счетов"),b.accounts=[],d=0;d<a.length;d++){var c=a[d],e=getParam(c,null,null,/<a[^>]+href=["'][^"']*account-statement.asp\?id=([^'"&]*)/i,replaceHtmlEntities),f=getParam(c,null,null,/<a[^>]+href=["'][^"']*account-statement[^>]*>([\s\S]*?)<\/a>/i,
replaceTagsAndSpaces),e={__id:e,__name:f,num:f};__shouldProcess("accounts",e)&&processAccount(c,e);b.accounts.push(e)}else/На данный момент у Вас нет[^<]*счетов/i.test(a)?AnyBalance.trace("Нет ни одного счета"):(AnyBalance.trace(a),AnyBalance.trace("Не удалось найти счета! Сайт изменен?"))}}
function processAccount(a,b){AnyBalance.trace("Обрабатываем счет "+b.__name);getParam(a,b,["accounts.currency","accounts.balance"],/(?:[\s\S]*?<td[^>]*>){5}([\s\S]*?)<\/td>/i,replaceTagsAndSpaces);getParam(a,b,"accounts.balance",/(?:[\s\S]*?<td[^>]*>){4}([\s\S]*?)<\/td>/i,replaceTagsAndSpaces,parseBalance);getParam(a,b,"accounts.type",/(?:[\s\S]*?<td[^>]*>){3}([\s\S]*?)<\/td>/i,replaceTagsAndSpaces);getParam(a,b,"accounts.status",/(?:[\s\S]*?<td[^>]*>){2}([\s\S]*?)<\/td>/i,replaceTagsAndSpaces);a=
getParam(a,null,null,/<a[^>]+href=["']([^"']*account-statement[^'"]*)/i,replaceHtmlEntities);AnyBalance.isAvailable("accounts.transactions")&&(a=AnyBalance.requestGet(joinUrl(g_baseurl,a),addHeaders({Referer:g_baseurl+"/accounts.asp"})),AnyBalance.isAvailable("accounts.transactions")&&processAccountTransactions(a,b));return b}
function processAccountTransactions(a,b){var d={date:{re:/Дата/i,result_func:parseDateSilent},descr:{re:/Операция/i,result_func:null},sum:{re:/Сумма/i,result_func:parseBalanceSilent},currency:{re:/Валюта/i,result_func:null}},c=new Date,e=new Date(c.getFullYear()-5,c.getMonth(),1);a=AnyBalance.requestPost(g_baseurl+"/account-statement.asp",{id:getParam(a,null,null,/<input[^>]+name="id"[^>]*value="([^"]*)/i,replaceHtmlEntities),fromdate:fmtDate(e),todate:fmtDate(c)},addHeaders({Referer:g_baseurl+"/account-statement.asp"}));
(c=getParam(a,null,null,/<table[^>]*card-table[^>]*>([\s\S]*?)<\/table>/i))?(b.transactions=[],processTable(c,b.transactions,"accounts.transactions.",d)):(AnyBalance.trace(a),AnyBalance.trace("Не найдена выписка по счету"))};
